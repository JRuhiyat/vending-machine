export type MockType<T> = {
  [P in keyof T]: jest.Mock<{
    [K in keyof T[P]]: jest.Mock<T[P][K]>;
  }>;
};

export const createMock = () => ({
  fetchDrinks: jest.fn(),
  findOne: jest.fn(),
  findAll: jest.fn(),
  create: jest.fn(),
  update: jest.fn(),
  remove: jest.fn(),
  restore: jest.fn(),
  count: jest.fn(),
  bulkCreate: jest.fn(),
  destroy: jest.fn(),
  increment: jest.fn(),
  decrement: jest.fn(),
  max: jest.fn(),
  min: jest.fn(),
  sum: jest.fn(),
  findAndCountAll: jest.fn(),
  findCreateFind: jest.fn(),
  upsert: jest.fn(),
  aggregate: jest.fn(),
  countDocuments: jest.fn(),
  createCollection: jest.fn(),
  createIndex: jest.fn(),
  dropCollection: jest.fn(),
  dropIndex: jest.fn(),
  ensureIndex: jest.fn(),
  indexes: jest.fn(),
  indexInformation: jest.fn(),
  insertMany: jest.fn(),
  insertOne: jest.fn(),
  isCapped: jest.fn(),
  listIndexes: jest.fn(),
  options: jest.fn(),
  reIndex: jest.fn(),
  stats: jest.fn(),
  updateOne: jest.fn(),
  updateMany: jest.fn(),
  replaceOne: jest.fn(),
  save: jest.fn(),
  deleteOne: jest.fn(),
  deleteMany: jest.fn(),
  find: jest.fn(),
  findById: jest.fn(),
  findByIdAndRemove: jest.fn(),
  findByIdAndDelete: jest.fn(),
  findByIdAndUpdate: jest.fn(),
  findOneAndUpdate: jest.fn(),
  findOneAndRemove: jest.fn(),
  findOneAndDelete: jest.fn(),
});
